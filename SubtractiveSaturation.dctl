__DEVICE__ float3 rgb_hsv(float3 in){
float3 HSV;
float min = _fminf(_fminf(in.x, in.y), in.z);
float max = _fmaxf(_fmaxf(in.x, in.y), in.z);
HSV.z = max;
float delta = max - min;
if (max != 0.0f) {
HSV.y = delta / max;
} else {
HSV.y = 0.0f;
HSV.x = 0.0f;
return HSV;
}
if (delta == 0.0f) {
HSV.x = 0.0f;
} else if (in.x == max) {
HSV.x = (in.y - in.z) / delta;
} else if (in.y == max) {
HSV.x = 2.0f + (in.z - in.x) / delta;
} else {
HSV.x = 4.0f + (in.x - in.y) / delta;
}
HSV.x *= 1.0f / 6.0f;
if (HSV.x < 0.0f)
HSV.x += 1.0f;
return HSV;
}

DEFINE_UI_PARAMS(gain, Saturation, DCTLUI_SLIDER_FLOAT, 1.0, 0.0, 2.0, 0.1)

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    
    float3 in = {p_R, p_G, p_B};

    float3 out;
    
    float3 hsv = rgb_hsv(in);
    
    {
    out.x = ((in.x-hsv.z)*gain)+hsv.z;
    out.y = ((in.y-hsv.z)*gain)+hsv.z;
    out.z = ((in.z-hsv.z)*gain)+hsv.z;
    }

    return out;
}