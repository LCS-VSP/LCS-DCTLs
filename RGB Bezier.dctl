__DEVICE__ float3 apply_bezier(float3 in, float SHD_R, float HIG_R, float SHD_G, float HIG_G, float SHD_B, float HIG_B)
{

float3 out;

if(in.x < 0.0)
{
in.x = 0.0;
}

if(in.y < 0.0)
{
in.y = 0.0;
}

if(in.z < 0.0)
{
in.z = 0.0;
}

if(in.x > 1.0)
{
in.x = 1.0;
}

if(in.y > 1.0)
{
in.y = 1.0;
}

if(in.z > 1.0)
{
in.z = 1.0;
}

float r = in.x/1;
out.x = (0 * _powf(1 - r,3) + 3 * SHD_R * _powf(1 - r,2) * r + 3 * HIG_R * (1 - r) * _powf(r,2) + 1 * _powf(r,3)) * 1;


float g = in.y/1;
out.y = (0 * _powf(1 - g,3) + 3 * SHD_G * _powf(1 - g,2) * g + 3 * HIG_G * (1 - g) * _powf(g,2) + 1 * _powf(g,3)) * 1;

float b = in.z/1;
out.z = (0 * _powf(1 - b,3) + 3 * SHD_B * _powf(1 - b,2) * b + 3 * HIG_B * (1 - b) * _powf(b,2) + 1 * _powf(b,3)) * 1;

return out;
}


DEFINE_UI_PARAMS(SHD_R, Shadow Red, DCTLUI_SLIDER_FLOAT, .333, 0.0,.666, 0.1)
DEFINE_UI_PARAMS(HIG_R, Highlight Red, DCTLUI_SLIDER_FLOAT, .666, .333,1.0, 0.1)
DEFINE_UI_PARAMS(SHD_G, Shadow Green, DCTLUI_SLIDER_FLOAT, .333, 0.0,.666, 0.1)
DEFINE_UI_PARAMS(HIG_G, Highlight Green, DCTLUI_SLIDER_FLOAT, .666, .333,1.0, 0.1)
DEFINE_UI_PARAMS(SHD_B, Shadow Blue, DCTLUI_SLIDER_FLOAT, .333, 0.0,.666, 0.1)
DEFINE_UI_PARAMS(HIG_B, Highlight Blue, DCTLUI_SLIDER_FLOAT, .666, .333,1.0, 0.1)
DEFINE_UI_PARAMS(opt_showcurve, Show Curve, DCTLUI_CHECK_BOX, 0)

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    
    float3 in = {p_R, p_G, p_B};
    
    float width = (float)p_Width;
    float height = (float)p_Height;
    float X = (float)p_X;
    float Y = height - (float)p_Y;
    float3 ramp = {X / width, X / width, X / width};
    
    float3 out;
    
    out = apply_bezier(in, SHD_R, HIG_R, SHD_G, HIG_G, SHD_B, HIG_B);

    ramp = apply_bezier(ramp, SHD_R, HIG_R, SHD_G, HIG_G, SHD_B, HIG_B);


    if (opt_showcurve == 1)

    {

    float overlayR = ramp.x >= (Y - 5.0f) / height && ramp.x <= (Y + 5.0f) / height ? 1.0f : 0.0f;
    float overlayG = ramp.y >= (Y - 5.0f) / height && ramp.y <= (Y + 5.0f) / height ? 1.0f : 0.0f;
    float overlayB = ramp.z >= (Y - 5.0f) / height && ramp.z <= (Y + 5.0f) / height ? 1.0f : 0.0f;

    out.x = overlayR == 0.0f ? out.x : overlayR;
    out.y = overlayG == 0.0f ? out.y : overlayG;
    out.z = overlayB == 0.0f ? out.z : overlayB;

    }

    return out;
}